apiVersion: v1
kind: Pod
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Pod","metadata":{"annotations":{},"creationTimestamp":null,"labels":{"run":"bash-pod"},"name":"bash-pod","namespace":"default"},"spec":{"containers":[{"command":["bin/sh","-c","hostname \u003e /tmp/hostname \u0026\u0026 sleep 1d"],"image":"bash","name":"bash-pod","resources":{}}],"dnsPolicy":"ClusterFirst","restartPolicy":"Never"},"status":{}}
  creationTimestamp: "2021-11-24T21:57:04Z"
  labels:
    run: bash-pod
    my-label: test  
  name: bash-pod
  namespace: default
  resourceVersion: "1310769"
  uid: 23febb7e-e8f0-4aea-b987-e4e116832ab0
spec:
  containers:
  - command:
    - bin/sh
    - -c
    - hostname > /tmp/hostname && sleep 1d
    image: bash
    imagePullPolicy: Always
    name: bash-pod
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-zrg57
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: docker-desktop
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Never
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: kube-api-access-zrg57
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace
status:
  conditions:
  - lastProbeTime: null
    lastTransitionTime: "2021-11-24T21:57:04Z"
    status: "True"
    type: Initialized
  - lastProbeTime: null
    lastTransitionTime: "2021-11-24T21:57:10Z"
    status: "True"
    type: Ready
  - lastProbeTime: null
    lastTransitionTime: "2021-11-24T21:57:10Z"
    status: "True"
    type: ContainersReady
  - lastProbeTime: null
    lastTransitionTime: "2021-11-24T21:57:04Z"
    status: "True"
    type: PodScheduled
  containerStatuses:
  - containerID: docker://7601a0915780b417f0df2b2349372ce6c45880d41f9030dd7ce73b069916b70a
    image: bash:latest
    imageID: docker-pullable://bash@sha256:876600f8a1ce04df27722f482ebfe6696aa4fec6a61a7ea2cf6d5045a63c5d9a
    lastState: {}
    name: bash-pod
    ready: true
    restartCount: 0
    started: true
    state:
      running:
        startedAt: "2021-11-24T21:57:09Z"
  hostIP: 192.168.65.4
  phase: Running
  podIP: 10.1.10.68
  podIPs:
  - ip: 10.1.10.68
  qosClass: BestEffort
  startTime: "2021-11-24T21:57:04Z"
